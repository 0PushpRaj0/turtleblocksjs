{"BLOCKPLUGINS": {"hideblocks": "var hideBlocks = new ProtoBlock('hideblocks');hideBlocks.palette = palettes.dict['extras'];blocks.protoBlockDict['hideblocks'] = hideBlocks;hideBlocks.zeroArgBlock();hideBlocks.staticLabels.push('hide');", "xturtle": "var getxTurtleBlock = new ProtoBlock('xturtle');getxTurtleBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['xturtle'] = getxTurtleBlock;getxTurtleBlock.oneArgMathBlock();getxTurtleBlock.staticLabels.push('turtle x');getxTurtleBlock.defaults.push(0);getxTurtleBlock.docks[1][2] = 'anyin';", "showblocks": "var showBlocks = new ProtoBlock('showblocks');showBlocks.palette = palettes.dict['extras'];blocks.protoBlockDict['showblocks'] = showBlocks;showBlocks.zeroArgBlock();showBlocks.staticLabels.push('show');", "publish": "var pubBlock = new ProtoBlock('publish');pubBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['publish'] = pubBlock;pubBlock.oneArgBlock();pubBlock.defaults.push('comment');pubBlock.staticLabels.push('publish');pubBlock.docks[1][2] = 'textin';", "playback": "var audioBlock = new ProtoBlock('playback');audioBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['playback'] = audioBlock;audioBlock.defaults.push(null);audioBlock.oneArgBlock();audioBlock.docks[1][2] = 'mediain';audioBlock.staticLabels.push('playback');", "yturtle": "var getyTurtleBlock = new ProtoBlock('yturtle');getyTurtleBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['yturtle'] = getyTurtleBlock;getyTurtleBlock.oneArgMathBlock();getyTurtleBlock.staticLabels.push('turtle y');getyTurtleBlock.defaults.push(0);getyTurtleBlock.docks[1][2] = 'anyin';", "stopTurtle": "var stopTurtleBlock = new ProtoBlock('stopTurtle');stopTurtleBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['stopTurtle'] = stopTurtleBlock;stopTurtleBlock.oneArgBlock();stopTurtleBlock.docks[1][2] = 'anyin';stopTurtleBlock.defaults.push(0);stopTurtleBlock.staticLabels.push('stop turtle');", "eval": "var evalBlock = new ProtoBlock('eval');evalBlock.palette = palettes.dict['number'];blocks.protoBlockDict['eval'] = evalBlock;evalBlock.twoArgMathBlock();evalBlock.docks[1][2] = 'textin';evalBlock.defaults.push('x');evalBlock.defaults.push(100);evalBlock.staticLabels.push('eval');evalBlock.staticLabels.push('f(x)');evalBlock.staticLabels.push('x');", "startTurtle": "var startTurtleBlock = new ProtoBlock('startTurtle');startTurtleBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['startTurtle'] = startTurtleBlock;startTurtleBlock.oneArgBlock();startTurtleBlock.docks[1][2] = 'anyin';startTurtleBlock.defaults.push(0);startTurtleBlock.staticLabels.push('start turtle');", "print": "var printBlock = new ProtoBlock('print');printBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['print'] = printBlock;printBlock.oneArgBlock();printBlock.staticLabels.push('print');printBlock.docks[1][2] = 'anyin';", "loudness": "var loudnessBlock = new ProtoBlock('loudness');loudnessBlock.palette = palettes.dict['sensors'];blocks.protoBlockDict['loudness'] = loudnessBlock;loudnessBlock.parameterBlock();loudnessBlock.staticLabels.push('loudness');", "speak": "var speakBlock = new ProtoBlock('speak');speakBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['speak'] = speakBlock;speakBlock.oneArgBlock();speakBlock.staticLabels.push('speak');speakBlock.defaults.push('hello');speakBlock.docks[1][2] = 'textin';", "stopplayback": "var audioStopBlock = new ProtoBlock('stopplayback');audioStopBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['stopplayback'] = audioStopBlock;audioStopBlock.zeroArgBlock();audioStopBlock.staticLabels.push('stop')", "savesvg": "var svgBlock = new ProtoBlock('savesvg');svgBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['savesvg'] = svgBlock;svgBlock.oneArgBlock();svgBlock.defaults.push('title');svgBlock.staticLabels.push('save svg');svgBlock.docks[1][2] = 'textin';", "wait": "var waitBlock = new ProtoBlock('wait');waitBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['wait'] = waitBlock;waitBlock.oneArgBlock();waitBlock.staticLabels.push('wait');waitBlock.defaults.push(1);"}, "FLOWPLUGINS": {"hideblocks": "hideBlocks();turtleDelay = 0;", "publish": "if (args.length == 1) {    doPublish(args[0]);};", "savesvg": "if (args.length == 1) {    doSaveSVG(canvas, turtles, args[0])};", "showblocks": "showBlocks();turtleDelay = DEFAULTDELAY;", "print": "if (args.length == 1) {    var msgContainer = msgText.parent;    msgContainer.visible = true;    msgText.text = args[0].toString();    msgContainer.updateCache();    stage.swapChildren(msgContainer, last(stage.children));};", "speak": "meSpeak.speak(args[0])"}, "PARAMETERPLUGINS": {"loudness": "if (mic == null) {errorMsg('The microphone is not available.');    value = 0;} else {    value = Math.round(mic.getLevel() * 1000);};"}}
