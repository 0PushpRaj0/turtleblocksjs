//* comment *//

Copyright (C) 2015 Walter Bender

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

//* globals *//
var impactKey = 'xyzzy';
var impactLastFetchTime = 0;
var impactUID = '';
var impactDate = 0;
var impactData = null;

//* block:fetchdata *//
var fetchBlk = new ProtoBlock('fetch');
fetchBlk.palette = palettes.dict['sensors'];
blocks.protoBlockDict['fetch'] = fetchBlk;
fetchBlk.staticLabels.push(_('fetch'), _('UID'), _('field'), _('time'));
fetchBlk.adjustWidthToLabel();
fetchBlk.threeArgMathBlock();
fetchBlk.dockTypes[1] = 'textin';
fetchBlk.dockTypes[2] = 'textin';
fetchBlk.dockTypes[3] = 'numberin';
fetchBlk.defaults.push("UID");
fetchBlk.defaults.push("temp");
fetchBlk.defaults.push(0);

//* arg:fetch *//
var block = logo.blocks.blockList[blk];
var conns = block.connections;
var field = logo.parseArg(logo, turtle, conns[2]);
var uid = logo.parseArg(logo, turtle, conns[1]);
var date = logo.parseArg(logo, turtle, conns[3]);

var d = new Date();
var now = d.getTime();
var value = (now - impactLastFetchTime) / 1000;
var haveData = false;
if (value > 3600 || uid != impactUID || date != impactDate) {
    var apiURL = 'https://sensor-station.appspot.com/sensor_station';
    console.log('using server data');
    try {
        var request = new XMLHttpRequest();
        request.open('GET', apiURL, false);
        request.send(null);
        var response = request.responseText;
        console.log(response);
    } catch (e) {
        logo.errorMsg(_('Impact haveData not available.'), blk);
    }
    try {
        impactData = JSON.parse(response);
        haveData = true;
    } catch (e) {
        logo.errorMsg(_('Cannot parse Impact data.'), blk);
    }
} else {
    haveData = true;
    console.log('using cached data');
    console.log(impactData);
}

var output = 0;
if (haveData) {
    impactLastFetchTime = now;
    impactUID = uid;
    impactDate = date;
    if (true) {   
        try {
            output = impactData['sensor-data'][0][field];
        } catch (e) {
           logo.errorMsg(_('Impact field not found.'), blk);
        }
    } else {
        logo.errorMsg(_('Impact data not available.'), blk);
    }
}
block.value = output;
