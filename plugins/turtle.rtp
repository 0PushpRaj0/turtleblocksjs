//* comment *//

Copyright (C) 2015 Ignacio Rodr√≠guez

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

//* globals *//

//* flow:setturtlename *//
var cblk = logo.blocks.blockList[blk].connections[1];
var sourceName = args[0];
var targetName = args[1];
var thisTurtle = null;
var foundTurtle = false;
for (var i = 0; i < turtles.turtleList.length; i++) {
    thisTurtle = turtles.turtleList[i];
    if (sourceName == thisTurtle.name) {
        thisTurtle.name = targetName;
        foundTurtle = true;
        break;
    }
}
if (!foundTurtle) {
    errorMsg('Could not find turtle ' + sourceName, blk);
}

//* block:xturtle *//
var getxTurtleBlock = new ProtoBlock('xturtle');
getxTurtleBlock.palette = palettes.dict['extras'];
blocks.protoBlockDict['xturtle'] = getxTurtleBlock;
getxTurtleBlock.oneArgBlock();
getxTurtleBlock.docks[1][2] = 'anyin';
getxTurtleBlock.staticLabels.push('turtle x');
getxTurtleBlock.defaults.push('0');

//* block:yturtle *//
var getyTurtleBlock = new ProtoBlock('yturtle');
getyTurtleBlock.palette = palettes.dict['extras'];
blocks.protoBlockDict['yturtle'] = getyTurtleBlock;
getyTurtleBlock.oneArgBlock();
getyTurtleBlock.docks[1][2] = 'anyin';
getyTurtleBlock.staticLabels.push('turtle y');
getyTurtleBlock.defaults.push('0');

//* block:startTurtle *//
var startTurtleBlock = new ProtoBlock('startTurtle');
startTurtleBlock.palette = palettes.dict['extras'];
blocks.protoBlockDict['startTurtle'] = startTurtleBlock;
startTurtleBlock.oneArgBlock();
startTurtleBlock.docks[1][2] = 'anyin';
startTurtleBlock.defaults.push('0');
startTurtleBlock.staticLabels.push('start turtle');
startTurtleBlock.fontsize = '16px';

//* block:stopTurtle *//
var stopTurtleBlock = new ProtoBlock('stopTurtle');
stopTurtleBlock.palette = palettes.dict['extras'];
blocks.protoBlockDict['stopTurtle'] = stopTurtleBlock;
stopTurtleBlock.oneArgBlock();
stopTurtleBlock.docks[1][2] = 'anyin';
stopTurtleBlock.defaults.push('0');
stopTurtleBlock.staticLabels.push('stop turtle');
stopTurtleBlock.fontsize = '16px';

//* block:setturtlename *//
var setTurtleName = new ProtoBlock('setturtlename');
setTurtleName.palette = palettes.dict['extras'];
blocks.protoBlockDict['setturtlename'] = setTurtleName;
setTurtleName.twoArgBlock();
setTurtleName.docks[1][2] = 'anyin';
setTurtleName.docks[2][2] = 'anyin';
setTurtleName.defaults.push('0');
setTurtleName.defaults.push('Yertle');
setTurtleName.staticLabels.push('turtle name');
setTurtleName.staticLabels.push('source');
setTurtleName.staticLabels.push('target');
setTurtleName.fontsize = '16px';