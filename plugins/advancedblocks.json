{"BLOCKPLUGINS": {"hideblocks": "var hideBlocks = new ProtoBlock('hideblocks');hideBlocks.palette = palettes.dict['extras'];blocks.protoBlockDict['hideblocks'] = hideBlocks;hideBlocks.staticLabels.push(_('hide blocks'));hideBlocks.adjustWidthToLabel();hideBlocks.zeroArgBlock();", "publish": "var pubBlock = new ProtoBlock('publish');pubBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['publish'] = pubBlock;pubBlock.staticLabels.push(_('publish'));pubBlock.adjustWidthToLabel();pubBlock.oneArgBlock();pubBlock.defaults.push(_('comment'));pubBlock.dockTypes[1] = 'textin';", "playback": "var audioBlock = new ProtoBlock('playback');audioBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['playback'] = audioBlock;audioBlock.defaults.push(null);audioBlock.staticLabels.push(_('play back'));audioBlock.adjustWidthToLabel();audioBlock.oneArgBlock();audioBlock.dockTypes[1] = 'mediain';", "savesvg": "var svgBlock = new ProtoBlock('savesvg');svgBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['savesvg'] = svgBlock;svgBlock.staticLabels.push(_('save svg'));svgBlock.adjustWidthToLabel();svgBlock.oneArgBlock();svgBlock.defaults.push(_('title') + '.svg');svgBlock.dockTypes[1] = 'textin';", "eval": "var evalBlock = new ProtoBlock('eval');evalBlock.palette = palettes.dict['number'];blocks.protoBlockDict['eval'] = evalBlock;evalBlock.staticLabels.push(_('eval'));evalBlock.staticLabels.push('f(x)');evalBlock.staticLabels.push('x');evalBlock.adjustWidthToLabel();evalBlock.twoArgMathBlock();evalBlock.dockTypes[1] = 'textin';evalBlock.defaults.push('x');evalBlock.defaults.push(100);", "showblocks": "var showBlocks = new ProtoBlock('showblocks');showBlocks.palette = palettes.dict['extras'];blocks.protoBlockDict['showblocks'] = showBlocks;showBlocks.staticLabels.push(_('show blocks'));showBlocks.adjustWidthToLabel();showBlocks.zeroArgBlock();", "loudness": "var loudnessBlock = new ProtoBlock('loudness');loudnessBlock.palette = palettes.dict['sensors'];blocks.protoBlockDict['loudness'] = loudnessBlock;loudnessBlock.staticLabels.push(_('loudness'));loudnessBlock.adjustWidthToLabel();loudnessBlock.parameterBlock();", "stopplayback": "var audioStopBlock = new ProtoBlock('stopplayback');audioStopBlock.palette = palettes.dict['extras'];blocks.protoBlockDict['stopplayback'] = audioStopBlock;audioStopBlock.staticLabels.push(_('stop play'));audioStopBlock.adjustWidthToLabel();audioStopBlock.zeroArgBlock();"}, "FLOWPLUGINS": {"hideblocks": "logo.hideBlocks();logo.setTurtleDelay(0);", "savesvg": "if (args.length == 1) {    doSaveSVG(canvas, turtles, args[0])};", "publish": "if (args.length == 1) {    doPublish(args[0]);};", "showblocks": "logo.showBlocks();logo.setTurtleDelay(DEFAULTDELAY);"}, "GLOBALS": "", "ARGPLUGINS": {"loudness": "if (!logo.mic.enabled) {    logo.mic.start();    logo.blocks.blockList[blk].value = null;} else {    logo.blocks.blockList[blk].value = Math.round(logo.mic.getLevel() * 1000);}"}, "PARAMETERPLUGINS": {"loudness": "if (logo.mic == null) {logo.errorMsg('The microphone is not available.');    value = 0;} else {    value = Math.round(logo.mic.getLevel() * 1000);};"}}
